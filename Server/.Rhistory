geom_segment(x = 1, xend = 2, y = 0.3, yend = 1.3, lwd = 1, aes(color = 'beta_1')) +
scale_color_manual(name = NULL, values = c("grey", "red", "black"),
labels=c(bquote(beta[0]),
bquote(beta[1]),
bquote(beta[0]+beta[1]%.%1)))
#scale_x_discrete(breaks=c(0.5, 1.5), labels=c('1', '2'))
theme_axis(P_t2, jitter = TRUE, xlim = c(-0.3, 2), legend.position = c(0.53, 0.08))
library(tidyverse)
library(patchwork)
library(broom)
# Reproducible "random" results
set.seed(40)
# Generate normal data with known parameters
rnorm_fixed = function(N, mu = 0, sd = 1)
scale(rnorm(N)) * sd + mu
# Plot style.
theme_axis = function(P,
jitter = FALSE,
xlim = c(0, 2.5),
ylim = c(0, 2.5),
legend.position = NULL) {
P = P + theme_bw() +
#geom_segment(
#    x = -1000, xend = 1000,
#    y = 0, yend = 0,
#    lty = 2, color = 'dark gray', lwd = 0.5
#) +
#geom_segment(
#    x = 0, xend = 0,
#    y = -1000, yend = 1000,
#    lty = 2, color = 'dark gray', lwd = 0.5
#) +
#coord_cartesian(xlim = xlim, ylim = ylim) +
scale_x_continuous(name = "Groups", breaks = c(1,2)) +
scale_y_continuous(name = "") +
theme(
axis.title.x = element_text(size = 13, face = 'bold'),
axis.text.x = element_text(size = 11, face = 'bold'),
axis.title.y = element_text(size = 13, face = 'bold'),
axis.text.y = element_text(size = 11, face = 'bold'),
legend.position = legend.position
)
# Return jittered or non-jittered plot?
if (jitter) {
P + geom_jitter(width = 0.1, size = 2)
}
else {
P + geom_point()
}
}
# Data
N = 6  # Number of data points per group
D_t2 = data.frame(
x = rep(c(1, 2), each=N),
y = c(rnorm_fixed(N, 0.3, 0.3), rnorm_fixed(N, 1.3, 0.3))
)
# Plot
P_t2 = ggplot(D_t2, aes(x=x, y=y)) +
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..,  color = 'grey'), lwd = 1) +
geom_segment(x = -0.25, xend = 0.25, y = 0.3, yend = 0.3, lwd = 1, aes(color = 'red')) +
geom_segment(x = 1, xend = 2, y = 0.3, yend = 1.3, lwd = 1, aes(color = 'beta_1')) +
scale_color_manual(name = NULL, values = c("grey", "red", "black"),
labels=c(bquote(beta[0]),
bquote(beta[1]),
bquote(beta[0]+beta[1]%.%1)))
#scale_x_discrete(breaks=c(0.5, 1.5), labels=c('1', '2'))
theme_axis(P_t2, jitter = TRUE, xlim = c(-0.3, 2), legend.position = c(0.53, 0.08))
library(tidyverse)
library(patchwork)
library(broom)
# Reproducible "random" results
set.seed(40)
# Generate normal data with known parameters
rnorm_fixed = function(N, mu = 0, sd = 1)
scale(rnorm(N)) * sd + mu
# Plot style.
theme_axis = function(P,
jitter = FALSE,
xlim = c(0, 2.5),
ylim = c(0, 2.5),
legend.position = NULL) {
P = P + theme_bw() +
#geom_segment(
#    x = -1000, xend = 1000,
#    y = 0, yend = 0,
#    lty = 2, color = 'dark gray', lwd = 0.5
#) +
#geom_segment(
#    x = 0, xend = 0,
#    y = -1000, yend = 1000,
#    lty = 2, color = 'dark gray', lwd = 0.5
#) +
#coord_cartesian(xlim = xlim, ylim = ylim) +
scale_x_continuous(name = "Groups", breaks = c()) +
scale_y_continuous(name = "") +
theme(
axis.title.x = element_text(size = 13, face = 'bold'),
axis.text.x = element_text(size = 11, face = 'bold'),
axis.title.y = element_text(size = 13, face = 'bold'),
axis.text.y = element_text(size = 11, face = 'bold'),
legend.position = legend.position
)
# Return jittered or non-jittered plot?
if (jitter) {
P + geom_jitter(width = 0.1, size = 2)
}
else {
P + geom_point()
}
}
# Data
N = 6  # Number of data points per group
D_t2 = data.frame(
x = rep(c(1, 2), each=N),
y = c(rnorm_fixed(N, 0.3, 0.3), rnorm_fixed(N, 1.3, 0.3))
)
# Plot
P_t2 = ggplot(D_t2, aes(x=x, y=y)) +
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..,  color = 'something'), lwd = 1) +
geom_segment(x = -0.25, xend = 0.25, y = 0.3, yend = 0.3, lwd = 1, aes(color = 'beta_0')) +
geom_segment(x = 1, xend = 2, y = 0.3, yend = 1.3, lwd = 1, aes(color = 'beta_1')) +
scale_color_manual(name = NULL, values = c("grey", "red", "black"),
labels=c(bquote(beta[0]),
bquote(beta[1]),
bquote(beta[0]+beta[1]%.%1)))
#scale_x_discrete(breaks=c(0.5, 1.5), labels=c('1', '2'))
theme_axis(P_t2, jitter = TRUE, xlim = c(-0.3, 2), legend.position = c(0.53, 0.08))
library(tidyverse)
library(patchwork)
library(broom)
# Reproducible "random" results
set.seed(40)
# Generate normal data with known parameters
rnorm_fixed = function(N, mu = 0, sd = 1)
scale(rnorm(N)) * sd + mu
# Plot style.
theme_axis = function(P,
jitter = FALSE,
xlim = c(0, 2.5),
ylim = c(0, 2.5),
legend.position = NULL) {
P = P + theme_bw() +
#geom_segment(
#    x = -1000, xend = 1000,
#    y = 0, yend = 0,
#    lty = 2, color = 'dark gray', lwd = 0.5
#) +
#geom_segment(
#    x = 0, xend = 0,
#    y = -1000, yend = 1000,
#    lty = 2, color = 'dark gray', lwd = 0.5
#) +
#coord_cartesian(xlim = xlim, ylim = ylim) +
scale_x_continuous(name = "Groups", breaks = c()) +
scale_y_continuous(name = "") +
theme(
axis.title.x = element_text(size = 13, face = 'bold'),
axis.text.x = element_text(size = 11, face = 'bold'),
axis.title.y = element_text(size = 13, face = 'bold'),
axis.text.y = element_text(size = 11, face = 'bold'),
legend.position = legend.position
)
# Return jittered or non-jittered plot?
if (jitter) {
P + geom_jitter(width = 0.1, size = 2)
}
else {
P + geom_point()
}
}
# Data
N = 6  # Number of data points per group
D_t2 = data.frame(
x = rep(c(1, 2), each=N),
y = c(rnorm_fixed(N, 0.3, 0.3), rnorm_fixed(N, 1.3, 0.3))
)
# Plot
P_t2 = ggplot(D_t2, aes(x=x, y=y)) +
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..,  color = 'something'), lwd = 1) +
geom_segment(x = -0.25, xend = 0.25, y = 0.3, yend = 0.3, lwd = 1, aes(color = 'beta_0')) +
geom_segment(x = 1, xend = 2, y = 0.3, yend = 1.3, lwd = 1, aes(color = 'beta_1')) +
scale_color_manual(name = NULL, values = c("gray", "red", "black"),
labels=c(bquote(beta[0]),
bquote(beta[1]),
bquote(beta[0]+beta[1]%.%1)))
#scale_x_discrete(breaks=c(0.5, 1.5), labels=c('1', '2'))
theme_axis(P_t2, jitter = TRUE, xlim = c(-0.3, 2), legend.position = c(0.53, 0.08))
library(tidyverse)
library(patchwork)
library(broom)
# Reproducible "random" results
set.seed(40)
# Generate normal data with known parameters
rnorm_fixed = function(N, mu = 0, sd = 1)
scale(rnorm(N)) * sd + mu
# Plot style.
theme_axis = function(P,
jitter = FALSE,
xlim = c(0, 2.5),
ylim = c(0, 2.5),
legend.position = NULL) {
P = P + theme_bw() +
#geom_segment(
#    x = -1000, xend = 1000,
#    y = 0, yend = 0,
#    lty = 2, color = 'dark gray', lwd = 0.5
#) +
#geom_segment(
#    x = 0, xend = 0,
#    y = -1000, yend = 1000,
#    lty = 2, color = 'dark gray', lwd = 0.5
#) +
#coord_cartesian(xlim = xlim, ylim = ylim) +
scale_x_continuous(name = "Groups", breaks = c()) +
scale_y_continuous(name = "") +
theme(
axis.title.x = element_text(size = 13, face = 'bold'),
axis.text.x = element_text(size = 11, face = 'bold'),
axis.title.y = element_text(size = 13, face = 'bold'),
axis.text.y = element_text(size = 11, face = 'bold'),
legend.position = legend.position
)
# Return jittered or non-jittered plot?
if (jitter) {
P + geom_jitter(width = 0.1, size = 2)
}
else {
P + geom_point()
}
}
# Data
N = 6  # Number of data points per group
D_t2 = data.frame(
x = rep(c(1, 2), each=N),
y = c(rnorm_fixed(N, 0.3, 0.3), rnorm_fixed(N, 1.3, 0.3))
)
# Plot
P_t2 = ggplot(D_t2, aes(x=x, y=y)) +
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..,  color = 'gray'), lwd = 1) +
geom_segment(x = -0.25, xend = 0.25, y = 0.3, yend = 0.3, lwd = 1, aes(color = 'beta_0')) +
geom_segment(x = 1, xend = 2, y = 0.3, yend = 1.3, lwd = 1, aes(color = 'beta_1')) +
scale_color_manual(name = NULL, values = c("gray", "red", "black"),
labels=c(bquote(beta[0]),
bquote(beta[1]),
bquote(beta[0]+beta[1]%.%1)))
#scale_x_discrete(breaks=c(0.5, 1.5), labels=c('1', '2'))
theme_axis(P_t2, jitter = TRUE, xlim = c(-0.3, 2), legend.position = c(0.53, 0.08))
install.packages("patchwork")
# Data
N = 20  # Number of data points per group
D_t2 = data.frame(
x = rep(c(0, 1), each=N),
y = c(rnorm_fixed(N, 0.3, 0.3), rnorm_fixed(N, 1.3, 0.3))
)
# Plot
P_t2 = ggplot(D_t2, aes(x=x, y=y)) +
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..,  color = 'something'), lwd = 2) +
geom_segment(x = -10, xend = 10, y = 0.3, yend = 0.3, lwd = 2, aes(color = 'beta_0')) +
geom_segment(x = 0, xend = 1, y = 0.3, yend = 1.3, lwd = 2, aes(color = 'beta_1')) +
scale_color_manual(name = NULL, values = c("blue", "red", "darkblue"), labels=c(bquote(beta[0]*" (group 1 mean)"), bquote(beta[1]*" (slope = difference)"), bquote(beta[0]+beta[1]%.%1*" (group 2 mean)")))
theme_axis(P_t2, jitter = TRUE, xlim = c(-0.3, 2), legend.position = c(0.53, 0.08))
# Data
N = 6  # Number of data points per group
D_t2 = data.frame(
x = rep(c(0, 1), each=N),
y = c(rnorm_fixed(N, 0.3, 0.3), rnorm_fixed(N, 1.3, 0.3))
)
# Plot
P_t2 = ggplot(D_t2, aes(x=x, y=y)) +
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..,  color = 'something'), lwd = 2) +
geom_segment(x = -10, xend = 10, y = 0.3, yend = 0.3, lwd = 2, aes(color = 'beta_0')) +
geom_segment(x = 0, xend = 1, y = 0.3, yend = 1.3, lwd = 2, aes(color = 'beta_1')) +
scale_color_manual(name = NULL, values = c("blue", "red", "darkblue"), labels=c(bquote(beta[0]*" (group 1 mean)"), bquote(beta[1]*" (slope = difference)"), bquote(beta[0]+beta[1]%.%1*" (group 2 mean)")))
theme_axis(P_t2, jitter = TRUE, xlim = c(-0.3, 2), legend.position = c(0.53, 0.08))
# Data
N = 6  # Number of data points per group
D_t2 = data.frame(
x = rep(c(1, 2), each=N),
y = c(rnorm_fixed(N, 0.3, 0.3), rnorm_fixed(N, 1.3, 0.3))
)
# Plot
P_t2 = ggplot(D_t2, aes(x=x, y=y)) +
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..,  color = 'something'), lwd = 2) +
geom_segment(x = -0.25, xend = 0.25, y = 0.3, yend = 0.3, lwd = 2, aes(color = 'beta_0')) +
geom_segment(x = 0, xend = 1, y = 0.3, yend = 1.3, lwd = 2, aes(color = 'beta_1')) +
scale_color_manual(name = NULL, values = c("blue", "red", "darkblue"), labels=c(bquote(beta[0]*" (group 1 mean)"), bquote(beta[1]*" (slope = difference)"), bquote(beta[0]+beta[1]%.%1*" (group 2 mean)")))
#scale_x_discrete(breaks=c(0.5, 1.5), labels=c('1', '2'))
theme_axis(P_t2, jitter = TRUE, xlim = c(-0.3, 2), legend.position = c(0.53, 0.08))
# Data
N = 6  # Number of data points per group
D_t2 = data.frame(
x = rep(c(1, 2), each=N),
y = c(rnorm_fixed(N, 0.3, 0.3), rnorm_fixed(N, 1.3, 0.3))
)
# Plot
P_t2 = ggplot(D_t2, aes(x=x, y=y)) +
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..,  color = 'something'), lwd = 2) +
geom_segment(x = -10, xend = 10, y = 0.3, yend = 0.3, lwd = 2, aes(color = 'beta_0')) +
geom_segment(x = 0, xend = 1, y = 0.3, yend = 1.3, lwd = 2, aes(color = 'beta_1')) +
scale_color_manual(name = NULL, values = c("blue", "red", "darkblue"), labels=c(bquote(beta[0]*" (group 1 mean)"), bquote(beta[1]*" (slope = difference)"), bquote(beta[0]+beta[1]%.%1*" (group 2 mean)")))
#scale_x_discrete(breaks=c(0.5, 1.5), labels=c('1', '2'))
theme_axis(P_t2, jitter = TRUE, xlim = c(-0.3, 2), legend.position = c(0.53, 0.08))
P_t2 = ggplot(D_t2, aes(x=x, y=y)) +
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..,  color = 'something'), lwd = 2) +
geom_segment(x = -0.25, xend = 0.25, y = 0.3, yend = 0.3, lwd = 2, aes(color = 'beta_0')) +
geom_segment(x = 0, xend = 1, y = 0.3, yend = 1.3, lwd = 2, aes(color = 'beta_1')) +
scale_color_manual(name = NULL, values = c("blue", "red", "darkblue"), labels=c(bquote(beta[0]*" (group 1 mean)"), bquote(beta[1]*" (slope = difference)"), bquote(beta[0]+beta[1]%.%1*" (group 2 mean)")))
#scale_x_discrete(breaks=c(0.5, 1.5), labels=c('1', '2'))
theme_axis(P_t2, jitter = TRUE, xlim = c(-0.3, 2), legend.position = c(0.53, 0.08))
P_t2 = ggplot(D_t2, aes(x=x, y=y)) +
#stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..,  color = 'something'), lwd = 2) +
geom_segment(x = -0.25, xend = 0.25, y = 0.3, yend = 0.3, lwd = 2, aes(color = 'beta_0')) +
geom_segment(x = 0, xend = 1, y = 0.3, yend = 1.3, lwd = 2, aes(color = 'beta_1')) +
scale_color_manual(name = NULL, values = c("blue", "red", "darkblue"), labels=c(bquote(beta[0]*" (group 1 mean)"), bquote(beta[1]*" (slope = difference)"), bquote(beta[0]+beta[1]%.%1*" (group 2 mean)")))
#scale_x_discrete(breaks=c(0.5, 1.5), labels=c('1', '2'))
theme_axis(P_t2, jitter = TRUE, xlim = c(-0.3, 2), legend.position = c(0.53, 0.08))
P_t2 = ggplot(D_t2, aes(x=x, y=y)) +
stat_summary(fun = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..,  color = 'something'), lwd = 2) +
geom_segment(x = -0.25, xend = 0.25, y = 0.3, yend = 0.3, lwd = 2, aes(color = 'beta_0')) +
geom_segment(x = 0, xend = 1, y = 0.3, yend = 1.3, lwd = 2, aes(color = 'beta_1')) +
scale_color_manual(name = NULL, values = c("blue", "red", "darkblue"), labels=c(bquote(beta[0]*" (group 1 mean)"), bquote(beta[1]*" (slope = difference)"), bquote(beta[0]+beta[1]%.%1*" (group 2 mean)")))
#scale_x_discrete(breaks=c(0.5, 1.5), labels=c('1', '2'))
theme_axis(P_t2, jitter = TRUE, xlim = c(-0.3, 2), legend.position = c(0.53, 0.08))
P_t2 = ggplot(D_t2, aes(x=x, y=y)) +
stat_summary(fun = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..,  color = 'something'), lwd = 2) +
geom_segment(x = -0.5, xend = 0.5, y = 0.3, yend = 0.3, lwd = 2, aes(color = 'beta_0')) +
geom_segment(x = 0, xend = 1, y = 0.3, yend = 1.3, lwd = 2, aes(color = 'beta_1')) +
scale_color_manual(name = NULL, values = c("blue", "red", "darkblue"), labels=c(bquote(beta[0]*" (group 1 mean)"), bquote(beta[1]*" (slope = difference)"), bquote(beta[0]+beta[1]%.%1*" (group 2 mean)")))
#scale_x_discrete(breaks=c(0.5, 1.5), labels=c('1', '2'))
theme_axis(P_t2, jitter = TRUE, xlim = c(-0.3, 2), legend.position = c(0.53, 0.08))
# Plot
P_t2 = ggplot(D_t2, aes(x=x, y=y)) +
stat_summary(fun = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..,  color = 'something')) +
geom_segment(x = -0.5, xend = 0.5, y = 0.3, yend = 0.3, lwd = 2, aes(color = 'beta_0')) +
geom_segment(x = 0, xend = 1, y = 0.3, yend = 1.3, lwd = 2, aes(color = 'beta_1')) +
scale_color_manual(name = NULL, values = c("blue", "red", "darkblue"), labels=c(bquote(beta[0]*" (group 1 mean)"), bquote(beta[1]*" (slope = difference)"), bquote(beta[0]+beta[1]%.%1*" (group 2 mean)")))
#scale_x_discrete(breaks=c(0.5, 1.5), labels=c('1', '2'))
theme_axis(P_t2, jitter = TRUE, xlim = c(-0.3, 2), legend.position = c(0.53, 0.08))
# Plot
P_t2 = ggplot(D_t2, aes(x=x, y=y)) +
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..,  color = 'something')) +
geom_segment(x = -0.5, xend = 0.5, y = 0.3, yend = 0.3, lwd = 2, aes(color = 'beta_0')) +
geom_segment(x = 0, xend = 1, y = 0.3, yend = 1.3, lwd = 2, aes(color = 'beta_1')) +
scale_color_manual(name = NULL, values = c("blue", "red", "darkblue"), labels=c(bquote(beta[0]*" (group 1 mean)"), bquote(beta[1]*" (slope = difference)"), bquote(beta[0]+beta[1]%.%1*" (group 2 mean)")))
#scale_x_discrete(breaks=c(0.5, 1.5), labels=c('1', '2'))
theme_axis(P_t2, jitter = TRUE, xlim = c(-0.3, 2), legend.position = c(0.53, 0.08))
P_t2 = ggplot(D_t2, aes(x=x, y=y)) +
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..,  color = 'something'), lwd = 2) +
geom_segment(x = -10, xend = 10, y = 0.3, yend = 0.3, lwd = 2, aes(color = 'beta_0')) +
geom_segment(x = 0, xend = 1, y = 0.3, yend = 1.3, lwd = 2, aes(color = 'beta_1')) +
scale_color_manual(name = NULL, values = c("blue", "red", "darkblue"), labels=c(bquote(beta[0]*" (group 1 mean)"), bquote(beta[1]*" (slope = difference)"), bquote(beta[0]+beta[1]%.%1*" (group 2 mean)")))
#scale_x_discrete(breaks=c(0.5, 1.5), labels=c('1', '2'))
theme_axis(P_t2, jitter = TRUE, xlim = c(-0.3, 2), legend.position = c(0.53, 0.08))
# Data
N = 6  # Number of data points per group
D_t2 = data.frame(
x = rep(c(1,2), each=N),
y = c(rnorm_fixed(N, 0.3, 0.3), rnorm_fixed(N, 1.3, 0.3))
)
# Plot
P_t2 = ggplot(D_t2, aes(x=x, y=y)) +
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..,  color = 'something'), lwd = 2) +
geom_segment(x = 0, xend = 1, y = 0.3, yend = 0.3, lwd = 2, aes(color = 'beta_0')) +
geom_segment(x = 0, xend = 1, y = 0.3, yend = 1.3, lwd = 2, aes(color = 'beta_1')) +
scale_color_manual(name = NULL, values = c("blue", "red", "darkblue"), labels=c(bquote(beta[0]*" (group 1 mean)"), bquote(beta[1]*" (slope = difference)"), bquote(beta[0]+beta[1]%.%1*" (group 2 mean)")))
#scale_x_discrete(breaks=c(0.5, 1.5), labels=c('1', '2'))
theme_axis(P_t2, jitter = TRUE, xlim = c(-0.3, 2), legend.position = c(0.53, 0.08))
# Data
N = 6  # Number of data points per group
D_t2 = data.frame(
x = rep(c(1, 2), each=N),
y = c(rnorm_fixed(N, 0.3, 0.3), rnorm_fixed(N, 1.3, 0.3))
)
# Plot
P_t2 = ggplot(D_t2, aes(x=x, y=y)) +
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..,  color = 'gray'), lwd = 1) +
geom_segment(x = -0.25, xend = 0.25, y = 0.3, yend = 0.3, lwd = 1, aes(color = 'beta_0')) +
geom_segment(x = 1, xend = 2, y = 0.3, yend = 1.3, lwd = 1, aes(color = 'beta_1')) +
scale_color_manual(name = NULL, values = c("gray", "red", "black"),
labels=c(bquote(beta[0]),
bquote(beta[1]),
bquote(beta[0]+beta[1]%.%1)))
#scale_x_discrete(breaks=c(0.5, 1.5), labels=c('1', '2'))
theme_axis(P_t2, jitter = TRUE, xlim = c(-0.3, 2), legend.position = c(0.53, 0.08))
# Plot
P_t2 = ggplot(D_t2, aes(x=x, y=y)) +
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..,  color = 'gray'), lwd = 1) +
#geom_segment(x = -0.25, xend = 0.25, y = 0.3, yend = 0.3, lwd = 1, aes(color = 'beta_0')) +
geom_segment(x = 1, xend = 2, y = 0.3, yend = 1.3, lwd = 1, aes(color = 'beta_1')) +
scale_color_manual(name = NULL, values = c("gray", "red", "black"),
labels=c(bquote(beta[0]),
bquote(beta[1]),
bquote(beta[0]+beta[1]%.%1)))
#scale_x_discrete(breaks=c(0.5, 1.5), labels=c('1', '2'))
theme_axis(P_t2, jitter = TRUE, xlim = c(-0.3, 2), legend.position = c(0.53, 0.08))
# Data
N = 6  # Number of data points per group
D_t2 = data.frame(
x = rep(c(1, 2), each=N),
y = c(rnorm_fixed(N, 0.3, 0.3), rnorm_fixed(N, 1.3, 0.3))
)
# Plot
P_t2 = ggplot(D_t2, aes(x=x, y=y)) +
stat_summary(fun.y = mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..,  color = 'something'), lwd = 1) +
geom_segment(x = -0.25, xend = 0.25, y = 0.3, yend = 0.3, lwd = 1, aes(color = 'beta_0')) +
geom_segment(x = 1, xend = 2, y = 0.3, yend = 1.3, lwd = 1, aes(color = 'beta_1')) +
scale_color_manual(name = NULL, values = c("black", "red", "grey"),
labels=c(bquote(beta[0]),
bquote(beta[1]),
bquote(beta[0]+beta[1]%.%1)))
#scale_x_discrete(breaks=c(0.5, 1.5), labels=c('1', '2'))
theme_axis(P_t2, jitter = TRUE, xlim = c(-0.3, 2), legend.position = c(0.53, 0.08))
library(MSstats)
?dataProcess()
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("clusterProfiler")
# installing/loading the package:
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR()
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR()
version
setwd('/mnt/hc-storage/users/hprice/Rbatch/QPROTmodel')
setRepositories()
setRepositories()
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("AnnotationHub")
citation("AnnotationHub")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("MSstats")
# Run MSstats
# load the library
library(MSstats)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("metaseqR2")
install.packages("conquer")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("metaseqR2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("metaseqR2", force = TRUE)
BiocManager::install("conquer", force = TRUE, dependencies = TRUE)
setwd("Z:/hprice/ThesisData/PXD004501/Raw/tTest")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.14")
source("https://bioconductor.org/biocLite.R")
biocLite("RDAVIDWebService")
source("http://bioconductor.org/biocLite.R")
BiocManager::install("RDAVIDWebService")
source("http://bioconductor.org/biocLite.R")
biocLite("RDAVIDWebService")
BiocManager::install("RDAVIDWebService")
library(MSstats)
library(reshape2)
library(data.table)
library(plyr)
library(stringr)
library(tidyr)
library("RDAVIDWebService")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.12")
library("RDAVIDWebService")
library(ggplot2)
# Run MSstats
# load the library
library(MSstats)
library("RDAVIDWebService")
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load / install+load installr
updateR()
library(clusterProfiler)
if(file.exists(dataSet)) {
unlink(dataSet, recursive = TRUE)
}
dir.create(dataSet)
dirs <- c("/NormalisedData",
"/Ttest", "/Ttest/Results", "/Ttest/PA",
"/Qmodel", "/Qmodel/subs", "/Qmodel/Results", "/Qmodel/FDR", "/Qmodel/PA",
"/Summary")
for(dir in dirs) {
dir.create(paste(jobdir, dir, sep = ""))
}
dataSet <- 'PXD004682'
jobdir<- paste(dataSet, "/", sep = "")
if(file.exists(dataSet)) {
unlink(dataSet, recursive = TRUE)
}
setwd('E:/OneDrive/PhD/Project/Thesis/4_Pipeline/Pipeline/Server')
if(file.exists(dataSet)) {
unlink(dataSet, recursive = TRUE)
}
dir.create(dataSet)
dirs <- c("/NormalisedData",
"/Ttest", "/Ttest/Results", "/Ttest/PA",
"/Qmodel", "/Qmodel/subs", "/Qmodel/Results", "/Qmodel/FDR", "/Qmodel/PA",
"/Summary")
for(dir in dirs) {
dir.create(paste(jobdir, dir, sep = ""))
}
